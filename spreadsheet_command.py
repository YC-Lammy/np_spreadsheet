"""    This program is part of spreadsheet.
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <https://www.gnu.org/licenses/>.
"""

# Do NOT Edit This File If You Do NOT Know What You Doing :)

# this is an extension for editing table data
# table data are stored in an numpy ndarray
# the np array can be access by calling tableWidget.model().array
# to modify the data simply do array[row][column] = new_data
# if modify the shape of array, tableWidget.setModel(tableModel(ndarray, headers= headers))
# good luck !


def main(commandBar, printOutLabel, tableWidget, tableModel,scripting = False, interact=False,screen_width=None,screen_height=None):
    import numpy as np
    import sys

    array = tableWidget.model().array
    commands = []

    def print(*args,**kw):
        colsep= kw.get('sep',' ')
        flush= kw.get('flush',True)
        linesep = kw.get('end','\n')
        if flush:
            printOutLabel.setText(colsep.join( map(str,args)))
        else:
            printOutLabel.setText(printOutLabel.text()+linesep+colsep.join( map(str,args)))
# write your functions here

#    def someFunc():
#        print('done some function')

# End of all functions
    if scripting == False and interact==False:
        try:
            command = commandBar.text()
            command = compile(command, 'user', 'exec')
            exec(command)
        except Exception as e:
            print(e)
        commandBar.clear()
    elif scripting:
        pass
    elif interact:
        import console
        import threading
        from PySide2.QtWidgets import QDialog
        def interact():
            layout = console.console(screen_width,screen_height)
            window =QDialog()
            window.setMinimumSize(screen_width/2,screen_height/2)
            window.setLayout(layout)
            window.setWindowTitle('python console')
            window.exec_()
        a = threading.Thread(target=interact,daemon=True)
        a.start()
        